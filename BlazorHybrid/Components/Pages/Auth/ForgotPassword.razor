@page "/forgot-password"

<div class="flex items-start justify-center min-h-screen p-5 bg-gradient-to-br from-purple-700 via-indigo-800 to-purple-900">
    <div class="w-full max-w-xl p-8 border shadow-2xl bg-white/95 backdrop-blur-sm rounded-2xl border-white/20 animate-fade-in">
        <h1 class="text-2xl font-bold text-center text-transparent bg-clip-text bg-gradient-to-r from-purple-700 to-indigo-800">
            Forgot Your Password?
        </h1>
        <p class="mt-3 text-center text-gray-600">Enter your email to reset your password</p>

        <EditForm Model="ForgotPasswordModel" OnValidSubmit="HandleResetPassword">
            <DataAnnotationsValidator />

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="p-3 mt-4 border border-red-100 bg-red-50 rounded-xl">
                    <p class="text-sm text-center text-red-600">@ErrorMessage</p>
                </div>
            }

            @if (!string.IsNullOrEmpty(SuccessMessage))
            {
                <div class="p-3 mt-4 border border-green-100 bg-green-50 rounded-xl">
                    <p class="text-sm text-center text-green-600">@SuccessMessage</p>
                </div>
            }

            <div class="mt-8 space-y-6">
                <!-- Email Input -->
                <div class="space-y-2">
                    <label for="email" class="block text-sm font-medium text-gray-700">Email Address</label>
                    <InputText id="email" placeholder="Enter your email"
                               class="w-full px-4 py-3 text-gray-700 transition-all duration-200 border border-gray-200 bg-gray-50 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-500/20 focus:border-purple-400 placeholder:text-gray-400"
                               @bind-Value="ForgotPasswordModel.Email" />
                    <ValidationMessage For="@(() => ForgotPasswordModel.Email)" class="mt-1 text-sm text-red-500" />
                </div>

                <!-- Submit Button -->
                <button type="submit" 
                        class="w-full py-3.5 px-4 font-semibold text-white bg-gradient-to-r from-purple-600 to-indigo-600
                               rounded-xl hover:from-purple-700 hover:to-indigo-700 transform transition-all duration-200
                               focus:outline-none focus:ring-2 focus:ring-purple-500/20 active:scale-[0.98] shadow-lg
                               shadow-purple-600/20 hover:shadow-purple-600/40">
                    Reset Password
                </button>
            </div>
        </EditForm>

        <!-- Redirect to Login -->
        <p class="mt-8 text-center text-gray-600">
            Remember your password?
            <a href="/login" class="ml-2 font-semibold text-purple-600 transition-colors duration-200 hover:text-purple-700">
                Log In
            </a>
        </p>
    </div>
</div>

@code {
    private ForgotPasswordRequestDto ForgotPasswordModel = new ForgotPasswordRequestDto();
    private string ErrorMessage = string.Empty;
    private string SuccessMessage = string.Empty;

    private async Task HandleResetPassword()
    {
        @* try
        {
            var result = await AuthService.SendResetPasswordEmailAsync(ForgotPasswordModel.Email);
            if (result.IsSuccess)
            {
                SuccessMessage = result.Message;
                ErrorMessage = string.Empty;
            }
            else
            {
                ErrorMessage = result.Message;
                SuccessMessage = string.Empty;
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
            SuccessMessage = string.Empty;
        } *@
    }
}
