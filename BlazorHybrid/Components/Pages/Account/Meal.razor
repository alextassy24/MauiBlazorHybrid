@page "/meal/{Id:int}"
@inject MealsViewModel MealsViewModel

<div class="p-5">
    <button class="flex items-center gap-2 px-4 py-2 mb-8 text-white bg-gray-500 rounded shadow hover:bg-gray-600"
            @onclick="MealsViewModel.NavigateBackToMeals">
        <i class="fa-solid fa-arrow-left"></i>
        <span class="hidden md:inline-block">Back</span>
    </button>

    @if (MealsViewModel.SelectedMeal != null)
    {
        <div class="flex items-center justify-between p-6 bg-gray-100 rounded-lg shadow-lg">
            <div>
                <h1 class="text-2xl font-bold">@MealsViewModel.SelectedMeal.Name</h1>
                <p class="mt-4 text-gray-600">@MealsViewModel.SelectedMeal.Description</p>
            </div>
            <button class="flex items-center gap-2 px-4 py-2 mt-8 text-white bg-red-500 rounded shadow hover:bg-red-600"
                @onclick="() => MealsViewModel.RemoveMeal(MealsViewModel.SelectedMeal.Id)">
                <i class="fa-solid fa-trash"></i>
                <span class="hidden md:inline-block">Delete</span>
            </button>
        </div>
    }
    else
    {
        <p class="p-3 font-bold text-center text-red-600 bg-red-300 rounded-lg shadow">Meal not found.</p>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    protected override void OnInitialized()
    {
        MealsViewModel.LoadMeal(Id);
    }
}
